name: Persistent QEMU VM with Auto-Restart

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */5 * * *'  # Every 5 hours

jobs:
  persistent-vm:
    runs-on: ubuntu-latest

    steps:
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y qemu-kvm cloud-image-utils genisoimage openssh-client wget curl gh tmate

    - name: Prepare workspace
      run: mkdir -p disk seed

    - name: Download or create persistent disk
      run: |
        cd disk
        if curl -sfL -o persistent.img "https://github.com/${{ github.repository }}/releases/download/vm-disk/persistent.img"; then
          echo "✅ Persistent disk restored from release."
        else
          echo "⚠️ No existing disk found. Creating a new one..."
          qemu-img create -f qcow2 persistent.img 10G
        fi

    - name: Download Ubuntu cloud image
      run: |
        wget -q https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.img -O ubuntu.img

    - name: Generate cloud-init seed image
      run: |
        echo "instance-id: githubvm" > seed/meta-data

        SSH_KEY=$(curl -s https://api.github.com/users/${{ github.repository_owner }}/keys | grep '"key":' | head -n1 | cut -d'"' -f4)
        if [ -z "$SSH_KEY" ]; then
          echo "❌ No SSH key found for user ${{ github.repository_owner }}. Please add a public SSH key to your GitHub account."
          exit 1
        fi

        cat > seed/user-data <<EOF
        #cloud-config
        users:
          - name: root
            ssh-authorized-keys:
              - $SSH_KEY
            sudo: ALL=(ALL) NOPASSWD:ALL
            shell: /bin/bash
        ssh_pwauth: false
        disable_root: false
        EOF

        cloud-localds seed.img seed/user-data seed/meta-data

    - name: Launch QEMU VM
      run: |
        nohup qemu-system-x86_64 \
          -enable-kvm \
          -m 2048 -smp 2 \
          -drive file=disk/persistent.img,format=qcow2 \
          -drive file=ubuntu.img,format=qcow2,if=virtio \
          -drive file=seed.img,format=raw,if=virtio \
          -net nic -net user,hostfwd=tcp::2222-:22 \
          -nographic > vm.log 2>&1 &

    - name: Wait for SSH to become available
      run: |
        for i in {1..30}; do
          nc -z localhost 2222 && echo "✅ VM SSH is ready!" && exit 0
          echo "⏳ Waiting for VM SSH on port 2222..."
          sleep 5
        done
        echo "❌ Timeout waiting for VM SSH."
        echo "---- VM Log ----"
        cat vm.log
        exit 1

    - name: Optional: Debug with tmate session
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: false

    - name: Upload updated persistent disk to release
      if: always()
      run: |
        echo "🧩 Preparing to upload updated disk..."
        cd disk
        # Ensure the release exists
        if ! gh release view vm-disk --repo ${{ github.repository }} > /dev/null 2>&1; then
          gh release create vm-disk persistent.img --title "VM Disk Backup" --notes "Initial disk backup"
        else
          gh release delete-asset vm-disk persistent.img --repo ${{ github.repository }} -y || echo "No old asset to delete"
          gh release upload vm-disk persistent.img --repo ${{ github.repository }} --clobber
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
